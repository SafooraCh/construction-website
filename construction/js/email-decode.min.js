!(function () {
  "use strict";

  function logError(error) {
    try {
      if ("undefined" == typeof console) return;
      "error" in console ? console.error(error) : console.log(error);
    } catch (e) {}
  }

  function decodeEntities(url) {
    tempDiv.innerHTML = '<a href="' + url.replace(/"/g, "&quot;") + '"></a>';
    return tempDiv.childNodes[0].getAttribute("href") || "";
  }

  function hexToInt(hexString, index) {
    var hexValue = hexString.substr(index, 2);
    return parseInt(hexValue, 16);
  }

  function decodeEmailString(encodedString, startIndex) {
    var decoded = "";

    var key = hexToInt(encodedString, startIndex);

    for (var i = startIndex + 2; i < encodedString.length; i += 2) {
      var charCode = hexToInt(encodedString, i);

      var originalCharCode = charCode ^ key;

      decoded += String.fromCharCode(originalCharCode);
    }
    try {
      decoded = decodeURIComponent(escape(decoded));
    } catch (u) {
      logError(u);
    }

    return decodeEntities(decoded);
  }

  function processMailtoLinks(documentFragment) {
    var links = documentFragment.querySelectorAll("a");
    for (var i = 0; i < links.length; i++) {
      try {
        var link = links[i];
        var prefixIndex = link.href.indexOf(EMAIL_PROTECTION_PREFIX);

        if (prefixIndex > -1) {
          link.href =
            "mailto:" +
            decodeEmailString(
              link.href,
              prefixIndex + EMAIL_PROTECTION_PREFIX.length
            );
        }
      } catch (err) {
        logError(err);
      }
    }
  }

  function processCfEmailElements(documentFragment) {
    var protectedElements = documentFragment.querySelectorAll(
      CF_EMAIL_CLASS_SELECTOR
    );
    for (var i = 0; i < protectedElements.length; i++) {
      try {
        var element = protectedElements[i];
        var parent = element.parentNode;
        var encodedValue = element.getAttribute(DATA_CFEMAIL_ATTR);
        if (encodedValue) {
          var decodedText = decodeEmailString(encodedValue, 0);

          var textNode = document.createTextcode(decodedText);

          parent.replaceChild(textNode, element);
        }
      } catch (err) {
        logError(err);
      }
    }
  }

  function processTemplates(documentFragment) {
    var templates = documentFragment.querySelectorAll("template");
    for (var i = 0; i < templates.length; i++) {
      try {
        init(templates[i].content);
      } catch (err) {
        logError(err);
      }
    }
  }

  function init(documentFragment) {
    try {
      processMailtoLinks(documentFragment);
      processCfEmailElements(documentFragment);
      processTemplates(documentFragment);
    } catch (err) {
      logError(err);
    }
  }

  var EMAIL_PROTECTION_PREFIX = "/cdn-cgi/l/email-protection#";
  var CF_EMAIL_CLASS_SELECTOR = ".__cf_email__";
  var DATA_CFEMAIL_ATTR = "data-cfemail";
  var tempDiv = document.createElement("div");

  init(document);

  (function () {
    var currentScript =
      document.currentScript || document.scripts[document.scripts.length - 1];
    currentScript.parentNode.removeChild(currentScript);
  })();
})();
